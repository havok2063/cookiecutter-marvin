# !usr/bin/env python
# -*- coding: utf-8 -*-
#
# Licensed under a 3-clause BSD license.
#

from __future__ import print_function, division, absolute_import
from flask import Flask
from werkzeug.contrib.profiler import ProfilerMiddleware, MergeStream
from {{cookiecutter.package_name}}.web import create_app
import os
import sys
import argparse

# --------------------------
# Parse command line options
# --------------------------
parser = argparse.ArgumentParser(description='Script to start {{cookiecutter.package_title}}-profiler.')
parser.add_argument('-p', '--port', help='Port to use in debug mode.', default=5000, type=int, required=False)
args = parser.parse_args()


# Start app

app = create_app(debug=True)

# Make file stream
try:
    logs = os.getenv('{{cookiecutter.package_name|upper}}_LOGS_DIR')
except:
    logs = None
if logs:
    logpath = os.path.join(logs, 'profile.log')
    file = open(logpath, 'w')
    stream = MergeStream(sys.stdout, file)
else:
    stream = None

app.config['PROFILE'] = True
app.wsgi_app = ProfilerMiddleware(app.wsgi_app, restrictions=[30], stream=stream)
app.run(debug=True, port=args.port)

