# !usr/bin/env python
# -*- coding: utf-8 -*-
#
# Licensed under a 3-clause BSD license.
#

from __future__ import print_function, division, absolute_import
import argparse
import os

# --------------------------
# Parse command line options
# --------------------------
parser = argparse.ArgumentParser(description="Script to start the web server")
parser.add_argument('-d', '--debug', help='Launch app in debug mode.', action="store_true", required=False)
parser.add_argument('-l', '--local', help='Launch app in local mode.', action="store_true", required=False)
parser.add_argument('-p', '--port', help='Port to use in debug mode.', default=5000, type=int, required=False)
parser.add_argument('-r', '--rules', help='List registered routes.', action="store_true", default=False, required=False)

args = parser.parse_args()

# -------------------
# Create app instance
# -------------------
from {{cookiecutter.package_name}}.web import create_app

app = create_app(debug=args.debug, local=args.local)

# Set local port envvar
if args.port:
    os.environ['LOCAL_{{cookiecutter.package_name|upper}}_PORT'] = str(args.port)

# List all the routes
if args.rules:
    for rule in app.url_map.iter_rules():
        print("Rule: {0} calls {1} ({2})".format(rule, rule.endpoint, ",".join(rule.methods)))


if __name__ == "__main__":
    '''
    This is called when this script is directly run.
    uWSGI gets the "app" object (the "callable") and runs it itself.
    '''
    if args.debug:
        app.run(debug=args.debug, port=args.port)
    else:
        app.run()
